#include <iostream>
using namespace std;

// Base class
class Base {
protected:
    int baseValue;

public:
    // Constructor with a parameter
    Base(int value) : baseValue(value) {
        cout << "Base class constructor called with value: " << baseValue << endl;
    }

    void displayBaseValue() {
        cout << "Value in base class: " << baseValue << endl;
    }
};

// Derived class
class Derived : public Base {
public:
    // Derived class constructor with a parameter, passing value to base class constructor
    Derived(int value) : Base(value) {
        cout << "Derived class constructor called." << endl;
    }

    void displayDerivedInfo() {
        cout << "Displaying derived class information." << endl;
    }
};

int main() {
    // Creating an object of Derived class and passing a value to the constructor
    Derived obj(10);

    // Display values
    obj.displayBaseValue();
    obj.displayDerivedInfo();

    return 0;
}
