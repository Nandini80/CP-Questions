#include <iostream>
#include <string>

using namespace std;

// Base class
class Person {
protected:
    string name;
public:
    Person(const string &n) : name(n) {}
    void showName() {
        cout << "Name: " << name << endl;
    }
};

// Derived class 1 - using virtual inheritance
class Student : virtual public Person {
protected:
    int studentID;
public:
    Student(const string &n, int id) : Person(n), studentID(id) {}
    void showStudentID() {
        cout << "Student ID: " << studentID << endl;
    }
};

// Derived class 2 - using virtual inheritance
class Employee : virtual public Person {
protected:
    int employeeID;
public:
    Employee(const string &n, int id) : Person(n), employeeID(id) {}
    void showEmployeeID() {
        cout << "Employee ID: " << employeeID << endl;
    }
};

// Derived class from both Student and Employee
class PartTimeStudent : public Student, public Employee {
public:
    PartTimeStudent(const string &n, int sid, int eid)
        : Person(n), Student(n, sid), Employee(n, eid) {}

    void showDetails() {
        showName();
        showStudentID();
        showEmployeeID();
    }
};

int main() {
    PartTimeStudent pts("John Doe", 123, 456);
    pts.showDetails();

    return 0;
}
