#include <iostream>
#include <vector>
#include <algorithm>
 
using namespace std;
 
const long long MOD = 1e9 + 7;
 
void solve() {
    long long n;
    cin >> n;
    vector<long long> arr(n);
 
    for (auto &num : arr) {
        cin >> num;
    }
 
    long long july = 0, res = 0;
 
    for (size_t i = 0; i < arr.size(); ++i) {
        if (arr[i] % 2 == 1) {
            if (arr[i] > july) {
                july = arr[i];
            }
        } else {
            if (arr[i] > res) {
                res = arr[i];
            }
        }
    }
 
    bool flag = all_of(arr.begin(), arr.end(), 
                       [&](long long num) { return num % 2 == arr[0] % 2; });
 
    if (flag) {
        cout << 0 << "\n";
        return;
    }
 
    sort(arr.begin(), arr.end());
    int cnt = 0;
 
    for (auto &num : arr) {
        if (num % 2 == 0 && num < july) {
            cnt++;
            num += july;
            july = max(july, num);
        }
    }
 
    flag = all_of(arr.begin(), arr.end(), 
                  [&](long long num) { return num % 2 == arr[0] % 2; });
 
    if (flag) {
        cout << cnt << "\n";
        return;
    }
 
    auto it = find(arr.begin(), arr.end(), july);
    if (it != arr.end()) {
        *it = july + res;
        cnt++;
    }
 
    cnt += count_if(arr.begin(), arr.end(), 
                    [&](long long num) { return num % 2 == 0; });
 
    cout << cnt << "\n";
}
 
int main() {
    long long t;
    cin >> t;
    while (t--) {
        solve();
    }
    return 0;
}
