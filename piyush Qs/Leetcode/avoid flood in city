class Solution {
public:
    vector<int> avoidFlood(vector<int>& rains)
    {
        int n = rains.size();
        vector<int>res(n,-1);
        unordered_map<int,int>mp;
        set<int>ss;
        for(int i=0;i<n;i++)
        {
            if(rains[i]==0)
            {
                ss.insert(i);
                res[i] = 1;
            }
            else
            {
                if(mp.count(rains[i]))
                {
                    int lastIndex = mp[rains[i]];
                    auto index = ss.upper_bound(lastIndex);
                    if(index==ss.end())
                    {
                        return {};
                    }
                    res[*index] = rains[i];
                    ss.erase(index);
                }
                mp[rains[i]] = i;
            }
        }   
        return res;
    }
};