class Solution {
public:
 
    unordered_map<string, int>mp;
    vector<TreeNode*> res;

    string solve( TreeNode* root){
        if ( root == NULL){
            return "";
        }

        string l = solve( root -> left);
        string r = solve( root -> right);

        string ans = to_string( root -> val) + " " + l + " " + r;

        if ( mp[ans] == 1){
            res.push_back( root);
        }

        mp[ans]++;
        return ans;
    }
    vector<TreeNode*> findDuplicateSubtrees(TreeNode* root) {
        string flag = solve(root);
        return res;
    }
};