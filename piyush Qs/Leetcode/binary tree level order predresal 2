class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int>> ans;

        if ( root == NULL){
            return ans;
        }

        queue<TreeNode*> q;
        q.push(root);

        TreeNode* curr;

        while(!q.empty()){
            vector<int>res;

            int n = q.size();
            for ( int i = 0;i < n; i++){

                curr = q.front();

                if ( curr -> left !=NULL){
                    q.push( curr -> left);
                }

                if ( curr -> right != NULL){
                    q.push( curr -> right);
                }

                res.push_back(curr -> val);
                q.pop();
            }
            ans.push_back(res);
        }
        reverse( ans.begin(), ans.end());
        return ans;
    }
};