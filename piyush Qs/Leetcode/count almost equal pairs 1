class Solution {
public:
    bool isValidPair(int a, int b) {
        string s1 = padWithZeros(a, max(to_string(a).size(), to_string(b).size()));
        string s2 = padWithZeros(b, s1.size());
        
        int ans = 0;
        int firstdiff = -1, seconddiff = -1;

        for (int i = 0; i < s1.size(); i++) {
            if (s1[i] != s2[i]) {
                ans++;
                if (ans == 1) {
                    firstdiff = i;
                } else if (ans == 2) {
                    seconddiff = i;
                } else {
                    return false;
                }
            }
        }

        if (ans == 2) {
            swap(s1[firstdiff], s1[seconddiff]);
            if (s1 == s2) {
                return true;
            }
        }
        return false;
    }

    int countPairs(vector<int>& nums) {
        unordered_map<int, int> freq;
        int res = 0;
        
        for (int num : nums) {
            for (const auto& [key, count] : freq) {
                if (num == key || isValidPair(num, key)) {
                    res += count;
                }
            }
            freq[num]++;
        }
        
        return res;
    }
};
