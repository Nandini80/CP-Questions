class Solution {
public:
    vector<int> sieve(int max) {
        vector<bool> ans(max + 1, true);
        ans[0] = ans[1] = false;
        for (int i = 2; i * i <= max; i++) {
            if (ans[i]) {
                for (int j = i * i; j <= max; j += i) {
                    ans[j] = false;
                }
            }
        }
        vector<int> res;
        for (int i = 2; i <= max; i++) {
            if (ans[i]) {
                res.push_back(i);
            }
        }
        return res;
    }

    int nonSpecialCount(int l, int r) {
        int cnt = 0;
        int sum = static_cast<int>(sqrt(r));
        vector<int> res = sieve(sum);

        for (int prime : res) {
            int square = prime * prime;
            if (square > r) {
                break;
            }
            if (square >= l) {
                cnt++;
            }
        }

        int totalNumbers = r - l + 1;
        return totalNumbers - cnt;
    }
};
