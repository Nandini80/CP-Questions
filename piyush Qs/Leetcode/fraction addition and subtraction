class Solution {
public:
    string fractionAddition(string s) {
        string res;
        int lcm1=1;
        vector<int> denom;
        for(int i=0;i<s.length()-1;i++){
            if(s[i]=='/'){
                if(s[i+1]=='1' && s[i+2]=='0'){
                    lcm1= lcm(10,lcm1);
                    i+=2;
                }else{
                    lcm1 = lcm(lcm1,int(s[i+1])-48);
                    i++;
                }
            }
        }

        int sum = 0;
        int curr = 0;

        for(int i = 0; i<s.size()-1; i++)
        {
            int mul = 1;
            if(s[i] == '/'){
                if(i-2 >= 0 && s[i-1] == '0' && s[i-2] == '1'){
                    s[i+1] == '1' && s[i+2] == '0' ? mul = (lcm1/10) : mul = (lcm1/(int(s[i+1])-48));   
                    curr = 10*mul;
                }
                else{
                    s[i+1] == '1' && s[i+2] == '0' ? mul = (lcm1/10) : mul = (lcm1/(int(s[i+1])-48)); 
                    curr = ( (int(s[i-1]) )-48)*mul;
                }
           
                 i-2>= 0 && s[i-2] == '-' || i-3>=0 && s[i-3] == '-' ? sum -= curr : sum += curr;
          
            }
        }
        
        int k = 2;

        while(k<10){
            if (sum%k == 0 && lcm1%k == 0){
                sum /= k;
                lcm1 /= k;
            }
            else {
                k++;
            }
        }
        

        string result = to_string(sum)+"/"+to_string(lcm1);
        return result;
    }
};