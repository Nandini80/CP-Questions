/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

   vector<TreeNode*> ans;
   set<int>res;

   void script( TreeNode* &root){
    if ( root != NULL){
       script( root -> left);
       script ( root -> right);

       if ( res.find( root-> val) != res.end()){

        if ( root -> left){
            ans.push_back( root -> left);

        }

        if ( root -> right){
            ans.push_back( root -> right);
        }
         root = NULL;
            delete root;
       }
    }
   }
    vector<TreeNode*> delNodes(TreeNode* root, vector<int>& dlt) {
        
        for ( int i = 0; i < dlt.size(); i++)
        res.insert(dlt[i]);
        script(root);
        if ( root){
            ans.push_back(root);
        }
            return ans;
        }
    
};