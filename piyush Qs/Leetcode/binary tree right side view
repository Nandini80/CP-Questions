/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        vector<int> result;
        if(root == nullptr)
            return result;
        
        queue<TreeNode*> levels;
        levels.push(root);

        while(!levels.empty()){
            int size = levels.size();
            TreeNode* current = levels.front();
            result.push_back(current->val);
            for(int i = 0; i < size; i++){
                current = levels.front();
                if(current->right)
                    levels.push(current->right);
                if(current->left)
                    levels.push(current->left);
                levels.pop();
            }
        }
        return result;
    }
};