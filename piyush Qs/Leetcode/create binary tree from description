class Solution {
public:
    TreeNode* createBinaryTree(vector<vector<int>>& descriptions) {
        unordered_map<int, TreeNode*>mp;
        unordered_set<int>children;

        for ( auto &arr : descriptions){
            int parent = arr[0], child = arr[1],  isLeft = arr[2];
            children.insert(child);

            if (mp.find(parent) == mp.end()){
            mp[parent] = new TreeNode(parent);
            }

            if (mp.find(child) == mp.end()){
                mp[child] = new TreeNode(child);
            }

            if (isLeft == 1){
                mp[parent] ->left = mp[child];
            }else{
                mp[parent] ->right = mp[child];
            }
        }

        int root = -1;
        for (auto &arr : descriptions){
            if ( children.find(arr[0]) == children.end()){
                root = arr[0];
                break;
            }
        }
        return mp[root];
    }
};