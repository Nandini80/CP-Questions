/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    void Sum ( TreeNode* root , int &sum){
        if ( root == NULL){
            return;
        }

        if ( root ->val % 2 == 0){
            if ( root -> left != NULL && root -> left -> left != NULL){
                sum += root ->left -> left ->val;
            }
             if (root->left != nullptr && root->left->right != nullptr)
            {
                sum += root->left->right->val;
            }
            if (root->right != nullptr && root->right->left != nullptr)
            {
                sum += root->right->left->val;
            }
            if (root->right != nullptr && root->right->right != nullptr)
            {
                sum += root->right->right->val;
            }
        }
        Sum(root->left, sum);
        Sum(root->right, sum);
    }
    
    int sumEvenGrandparent(TreeNode* root) {
        int sum = 0;
        Sum(root, sum);
        return sum;
    }
};
